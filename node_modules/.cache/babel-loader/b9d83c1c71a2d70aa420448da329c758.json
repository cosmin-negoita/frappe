{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/cosminnegoita/ui-kit/src/Components/Form/Input.js\";\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport \"./Form.css\";\nimport \"../Typography/Typography.css\";\nimport { SmallBodyText } from \"../Typography/Typography.js\";\nexport default function Input(props) {\n  const {\n    className,\n    ...attrs\n  } = props;\n  const componentBaseClass = \"input\";\n  const hasError = props.hasError ? \"has-error\" : \"\";\n  const size = props.size ? componentBaseClass + \"--size-\" + props.size : componentBaseClass + \"--medium\";\n  const classes = clsx(componentBaseClass, hasError, size, className);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-field\",\n    children: [props.label && /*#__PURE__*/_jsxDEV(\"label\", {\n      class: \"text--label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      size: props.size,\n      type: props.type,\n      name: props.name,\n      className: classes,\n      placeholder: props.placeholder,\n      value: props.value,\n      onChange: props.onChange,\n      disabled: props.disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), props.hasError && /*#__PURE__*/_jsxDEV(SmallBodyText, {\n      children: \"This is an error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/cosminnegoita/ui-kit/src/Components/Form/Input.js"],"names":["React","useState","clsx","SmallBodyText","Input","props","className","attrs","componentBaseClass","hasError","size","classes","label","type","name","placeholder","value","onChange","disabled"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,YAAP;AACA,OAAO,8BAAP;AACA,SAAQC,aAAR,QAA4B,6BAA5B;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEjC,QAAM;AAACC,IAAAA,SAAD;AAAY,OAAGC;AAAf,MAAwBF,KAA9B;AACA,QAAMG,kBAAkB,GAAG,OAA3B;AACA,QAAMC,QAAQ,GAAGJ,KAAK,CAACI,QAAN,GAAiB,WAAjB,GAA+B,EAAhD;AACA,QAAMC,IAAI,GAAGL,KAAK,CAACK,IAAN,GAAaF,kBAAkB,GAAG,SAArB,GAAiCH,KAAK,CAACK,IAApD,GAA2DF,kBAAkB,GAAG,UAA7F;AACA,QAAMG,OAAO,GAAGT,IAAI,CAACM,kBAAD,EAAqBC,QAArB,EAA+BC,IAA/B,EAAqCJ,SAArC,CAApB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,eACKD,KAAK,CAACO,KAAN,iBAAe;AAAO,MAAA,KAAK,EAAC,aAAb;AAAA,gBAA4BP,KAAK,CAACO;AAAlC;AAAA;AAAA;AAAA;AAAA,YADpB,eAEI;AAAO,MAAA,IAAI,EAAEP,KAAK,CAACK,IAAnB;AAAyB,MAAA,IAAI,EAAEL,KAAK,CAACQ,IAArC;AAA2C,MAAA,IAAI,EAAER,KAAK,CAACS,IAAvD;AAA6D,MAAA,SAAS,EAAEH,OAAxE;AAAiF,MAAA,WAAW,EAAEN,KAAK,CAACU,WAApG;AAAiH,MAAA,KAAK,EAAEV,KAAK,CAACW,KAA9H;AAAqI,MAAA,QAAQ,EAAEX,KAAK,CAACY,QAArJ;AAA+J,MAAA,QAAQ,EAAEZ,KAAK,CAACa;AAA/K;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKb,KAAK,CAACI,QAAN,iBAAkB,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;KAfuBL,K","sourcesContent":["import React, {useState} from \"react\";\nimport clsx from \"clsx\";\nimport \"./Form.css\";\nimport \"../Typography/Typography.css\";\nimport {SmallBodyText} from \"../Typography/Typography.js\";\n\nexport default function Input(props) {\n\n    const {className, ...attrs} = props;\n    const componentBaseClass = \"input\";\n    const hasError = props.hasError ? \"has-error\" : \"\";\n    const size = props.size ? componentBaseClass + \"--size-\" + props.size : componentBaseClass + \"--medium\";\n    const classes = clsx(componentBaseClass, hasError, size, className);\n\n    return (\n        <div className=\"form-field\">\n            {props.label && <label class=\"text--label\">{props.label}</label>}\n            <input size={props.size} type={props.type} name={props.name} className={classes} placeholder={props.placeholder} value={props.value} onChange={props.onChange} disabled={props.disabled} />\n            {props.hasError && <SmallBodyText>This is an error</SmallBodyText>}\n        </div>\n        )\n}"]},"metadata":{},"sourceType":"module"}