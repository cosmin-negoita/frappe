{"ast":null,"code":"import _objectWithoutProperties from\"/Users/cosminnegoita/frappe/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import clsx from\"clsx\";import Container from'../Container/Container.js';import\"../Typography/Typography.css\";import\"../Reset.css\";import\"./Card.css\";export default function Card(props){var className=props.className,attr=_objectWithoutProperties(props,[\"className\"]);var componentBaseClass=\"card\";// Setting a class for a property: const propClass = props.propClass ? componentBaseClass + \"--\" + props.propClass : \"\";\n// Setting the classes for the component: const classes = clsx(componentBaseClass + \" \" + propClass, className);\n// Available Types (see CSS): undefined, box, border\n// Available Sizes from Container (see Container CSS): undefined, small, medium, large\n// Available Spacings from Container (see Container CSS): undefined, 10, 20, 30, 50, 100\n// Available Layout from Container (see Container CSS): undefined, 2, 3, 4, auto\nvar type=props.type?componentBaseClass+\"--\"+props.type:\"\";var classes=clsx(componentBaseClass,type,className);var headerClasses=clsx(\"card__header\",\"text--label\",\"card__header--\"+props.size);if(props.headerLabel){return/*#__PURE__*/_jsxs(Container,{className:classes,limitHeight:props.limitHeight,children:[/*#__PURE__*/_jsx(\"div\",{className:headerClasses,children:props.headerLabel}),/*#__PURE__*/_jsx(Container,{size:props.size,spacing:props.spacing,layout:props.layout,children:props.children})]});}else{return/*#__PURE__*/_jsx(Container,{className:classes,type:props.type,size:props.size,spacing:props.spacing,layout:props.layout,limitHeight:props.limitHeight,children:props.children});}}","map":{"version":3,"sources":["/Users/cosminnegoita/frappe/src/Components/Card/Card.js"],"names":["React","clsx","Container","Card","props","className","attr","componentBaseClass","type","classes","headerClasses","size","headerLabel","limitHeight","spacing","layout","children"],"mappings":"0NAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,MAAO,8BAAP,CACA,MAAO,cAAP,CACA,MAAO,YAAP,CAEA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,IACzBC,CAAAA,SADyB,CACHD,KADG,CACzBC,SADyB,CACXC,IADW,0BACHF,KADG,gBAGhC,GAAMG,CAAAA,kBAAkB,CAAG,MAA3B,CACA;AACA;AAEA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,IAAI,CAAGJ,KAAK,CAACI,IAAN,CAAaD,kBAAkB,CAAG,IAArB,CAA4BH,KAAK,CAACI,IAA/C,CAAsD,EAAnE,CACA,GAAMC,CAAAA,OAAO,CAAGR,IAAI,CAACM,kBAAD,CAAqBC,IAArB,CAA2BH,SAA3B,CAApB,CACA,GAAMK,CAAAA,aAAa,CAAGT,IAAI,CAAC,cAAD,CAAiB,aAAjB,CAAgC,iBAAmBG,KAAK,CAACO,IAAzD,CAA1B,CAEA,GAAIP,KAAK,CAACQ,WAAV,CAAsB,CAClB,mBACA,MAAC,SAAD,EAAW,SAAS,CAAEH,OAAtB,CAA+B,WAAW,CAAEL,KAAK,CAACS,WAAlD,wBACI,YAAK,SAAS,CAAEH,aAAhB,UAAgCN,KAAK,CAACQ,WAAtC,EADJ,cAEI,KAAC,SAAD,EAAW,IAAI,CAAER,KAAK,CAACO,IAAvB,CAA6B,OAAO,CAAEP,KAAK,CAACU,OAA5C,CAAqD,MAAM,CAAEV,KAAK,CAACW,MAAnE,UACKX,KAAK,CAACY,QADX,EAFJ,GADA,CAOH,CARD,IASK,CACD,mBAAO,KAAC,SAAD,EAAW,SAAS,CAAEP,OAAtB,CAA+B,IAAI,CAAEL,KAAK,CAACI,IAA3C,CAAiD,IAAI,CAAEJ,KAAK,CAACO,IAA7D,CAAmE,OAAO,CAAEP,KAAK,CAACU,OAAlF,CAA2F,MAAM,CAAEV,KAAK,CAACW,MAAzG,CAAiH,WAAW,CAAEX,KAAK,CAACS,WAApI,UAAkJT,KAAK,CAACY,QAAxJ,EAAP,CACH,CACJ","sourcesContent":["import React from 'react';\nimport clsx from \"clsx\";\nimport Container from '../Container/Container.js';\nimport \"../Typography/Typography.css\";\nimport \"../Reset.css\";\nimport \"./Card.css\";\n\nexport default function Card(props) {\n    const {className, ...attr} = props;\n\n    const componentBaseClass = \"card\";\n    // Setting a class for a property: const propClass = props.propClass ? componentBaseClass + \"--\" + props.propClass : \"\";\n    // Setting the classes for the component: const classes = clsx(componentBaseClass + \" \" + propClass, className);\n\n    // Available Types (see CSS): undefined, box, border\n    // Available Sizes from Container (see Container CSS): undefined, small, medium, large\n    // Available Spacings from Container (see Container CSS): undefined, 10, 20, 30, 50, 100\n    // Available Layout from Container (see Container CSS): undefined, 2, 3, 4, auto\n\n    const type = props.type ? componentBaseClass + \"--\" + props.type : \"\";\n    const classes = clsx(componentBaseClass, type, className);\n    const headerClasses = clsx(\"card__header\", \"text--label\", \"card__header--\" + props.size);\n\n    if (props.headerLabel){\n        return (\n        <Container className={classes} limitHeight={props.limitHeight}>\n            <div className={headerClasses}>{props.headerLabel}</div>\n            <Container size={props.size} spacing={props.spacing} layout={props.layout} >\n                {props.children}\n            </Container>\n        </Container>);\n    }\n    else {\n        return <Container className={classes} type={props.type} size={props.size} spacing={props.spacing} layout={props.layout} limitHeight={props.limitHeight}>{props.children}</Container>;\n    }\n}"]},"metadata":{},"sourceType":"module"}